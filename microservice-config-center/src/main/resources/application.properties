# jasypt加密的密匙  -->    ENC()是固定写法，（）里面是加密后的信息
jasypt.encryptor.password=zhl

#服务端口
server.port=8091
#服务名称
spring.application.name=config-server
#服务注册中心
eureka.client.service-url.defaultZone=http://localhost:7001/eureka/,http://localhost:7002/eureka/,http://eureka7003.com:7003/eureka/

######################### 生产环境   ###############################
#服务的git仓库地址 多个仓库地址用,分割
spring.cloud.config.server.git.uri=https://github.com/zanhonglei/microservice

#配置文件所在的目录 /**
spring.cloud.config.server.git.search-paths=/*/*/*,/*/*,/*,
# 配置文件所在的分支
spring.cloud.config.label=master
#git仓库的用户名
spring.cloud.config.username=747060040@qq.com
#git仓库的密码
spring.cloud.config.password=ENC(YcPr3KEc1IlI7tHph0iyqhLNn5kVmS3X)

# spring.cloud.config.server.git.force-pull=true

# 存储配置文件的临时文件
#spring.cloud.config.server.git.basedir=file://${user.dir}/microservice-config-center/config-repo


######################### 本地测试方式1 ###############################
# ${user.dir} 是当前项目的根目录
#spring.cloud.config.server.git.uri=file://${user.dir}/microservice-config-center/config-repo

######################### 本地测试方式2 ###############################
# 使用本地文件系统存储方式来保存配置信息 Config Server 会默认从应用的 src/main/resource 目录下搜索配置文件
# spring.profiles.active=native
# 指定本地配置文件的路径
# spring.cloud.config.server.native.search-locations=${user.dir}/microservice-config-center/config-repo/



# 除了可以配置git账号和密码（HTTP认证方式）还可以使用SSH认证方式
#spring.cloud.config.token=


# 整合SpringSecurity
# 认证的用户名和密码
security.user.name=user
security.user.password=ENC(sMDpatwEVFKbWRqsBFwBBQ==)


